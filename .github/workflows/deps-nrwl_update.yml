name: 'Deps: NRWL Update'

on:
  schedule:
    - cron: '30 4 * * *'
  workflow_dispatch:

jobs:
  nrwl-update:
    runs-on: ubuntu-latest

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      # - uses: actions/cache@v2
      #   with:
      #     path: '**/node_modules'
      #     key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

      # - name: Set up Node.js
      #   uses: actions/setup-node@v2
      #   with:
      #     node-version: 16

      # - name: Install dependencies
      #   run: yarn

      # - name: NRWL Update
      #   run: |
      #     yarn update
      #     yarn format

      - name: Test Change
        run: echo 'hello world' >> test.txt

      - name: Check for changes
        run: |
          if [[ -z $(git status -s) ]]; then
            echo "CHANGED_FILES=false" >> $GITHUB_ENV
          else
            echo "CHANGED_FILES=true" >> $GITHUB_ENV
          fi
          echo "BRANCH=nrwl_update_$(date +'%Y_%m_%d')" >> $GITHUB_ENV
          echo "TITLE=NRWL Update $(date +'%d.%m.%Y')" >> $GITHUB_ENV

      - name: Create Branch
        if: env.CHANGED_FILES == 'true'
        run: |
          git checkout -b ${{ env.BRANCH }}
          git config --global user.email "steinhoff@locity.de"
          git config --global user.name "Marco Steinhoff"
          git add .
          git commit -m'chore(deps): update nrwl'
          git push origin ${{ env.BRANCH }}

      - name: Create Pull Request
        if: env.CHANGED_FILES == 'true'
        run: gh pr create --title '${{ env.TITLE }}' --body '**Automated pull request**' --base main --head ${{ env.BRANCH }} --label 'dependencies'
        env:
          GITHUB_TOKEN: ${{secrets.PAT}}

      # - name: Create Pull Request
      #   if: env.CHANGED_FILES == 'true'
      #   uses: actions/github-script@v3
      #   with:
      #     github-token: ${{ secrets.PAT }}
      #     script: |
      #       await github.pulls.create({
      #         owner: context.repo.owner,
      #         repo: context.repo.repo,
      #         title: '${{ env.TITLE }}',
      #         head: '${{ env.BRANCH }}',
      #         base: 'main',
      #         body: '**Automated pull request**',
      #         labels: ['dependencies']
      #       });
